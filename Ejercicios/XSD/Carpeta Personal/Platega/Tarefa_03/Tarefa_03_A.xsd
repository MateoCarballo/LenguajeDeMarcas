<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
<!-- Lo que teniamos en el ejercicio 1 de platega era así
<xs:complexType name="tipoNeno">
    <xs:sequence>
      <xs:element name="nome" type="xs:string"/>
      <xs:element name="dataNacemento" type="xs:date"/>
      <xs:element name="peso" type="xs:decimal"/>
      <xs:element name="altura" type="xs:unsignedByte"/>
      <xs:element name="vacunas" type="xs:boolean"/>
    </xs:sequence>
  <xs:attribute name="numeroExpedente" type="xs:unsignedShort"/>
  </xs:complexType>
-->

<!-- ENUNCIADO 
a) Tarefa 3_a
Modificar o documento xml e o esquema XML correspondente a gardería para:
▪ engadir ao neno un elemento sexo obrigatorio que pode tomar os valores H ou M. 
▪ o elemento peso debe ter sempre un decimal.
▪ o tamaño mínimo do nome será de 3 caracteres e o máximo de 80.
▪ engadir ao neno un atributo codigo que terá o seguinte formato:
– o primeiro caracter será unha P ou unha M
– a continuación irán dous número entre o 3 e o 7
– a continuación pode levar un - e tres díxitos máis.
– Posibles exemplos deste serían: P44, P44-323, P65-100
▪ engadir ao neno os teléfonos de contacto. Para elo crearase un elemento contacto por
cada teléfono que teñamos do neno. O elemento debe ter:
– un atributo relación para indicar o parentesco co neno, que só poderá tomar os
seguintes valores: nai, pai, avó/a, titor, outra.
– o teléfono debe permitir introducir unicamente 9 números.
– como moito gardaremos 4 contactos por cada neno.
▪ incluir un elemento idade baleiro en neno con dous atributos:
– un atributo anos que pode tomar valores entre 0 e 3
– un atributo meses que pode tomar valores entre 0 e 11
  
v
-->
<!-- Declaracion de elemento garderia, elemento PADRE/RAIZ -->
<xs:element name="garderia">
  <xs:complexType>
    <xs:sequence>
    <xs:element ref="neno" minOccurs="1" maxOccurs="50"/>
    </xs:sequence>
  </xs:complexType>
</xs:element>
<!-- Declaracion de neno, desde aqui hacemos referencia a los demas o declaramos los tipos-->
<xs:element name="neno">
  <xs:complexType>
    <xs:sequence> 
      <xs:element name="sexo" type="typeSexo" maxOccurs="50"/>
      <xs:element ref="nome"/>
      <xs:element ref="dataNacemento"/>
      <xs:element ref="peso"/>
      <xs:element name="altura" type="xs:unsignedByte"/>
      <xs:element name="vacunas" type="xs:boolean" default="true"/>
      <xs:element ref="contactos"/>
      <xs:element ref="idade"/> 
    </xs:sequence>
    <xs:attribute name="numeroExpedente" type="typeExpediente"/>
    <xs:attribute name="codigo" type="typeCodigo"/>
  </xs:complexType>
</xs:element>


<!--Elementos referenciados por Elemento 'neno'-->
<xs:element name="nome">
      <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="3"/>
            <xs:maxLength value="80"/>
          </xs:restriction>
      </xs:simpleType>
</xs:element> 

<xs:element name="dataNacemento">
      <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="20[0-9]{2}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])"/>
          </xs:restriction>
      </xs:simpleType>
</xs:element> 

<xs:element name="peso">
      <xs:simpleType>
          <xs:restriction base="xs:decimal">
            <xs:totalDigits value="3"/>
            <xs:fractionDigits value="1"/>
          </xs:restriction>
      </xs:simpleType>
</xs:element> 

<xs:element name="contactos">
      <xs:complexType>
          <xs:sequence>
          <xs:element ref="contacto" maxOccurs="4"/>
          </xs:sequence>
      </xs:complexType>
</xs:element> 

<xs:element name="contacto">
  <xs:complexType>
    <xs:sequence>
      <xs:element ref="telefono"/>
    </xs:sequence>
    <xs:attribute name="relacion">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="(pai|nai|avo|avoa|titor|outra)"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
</xs:element>

<xs:element name="telefono">
      <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="9"/>
          </xs:restriction>
      </xs:simpleType>
</xs:element> 

<xs:element name="idade">
      <xs:complexType>
        <xs:attribute name="anos" type="typeAnos"/>
        <xs:attribute name="meses" type="typeMeses"/>
      </xs:complexType>
</xs:element> 

<!--Definiciones de tipos de dato -->
<!--Definicion de tipo de dato 'typeAnos' usado en 'idade'-->
<xs:simpleType name="typeAnos">
   <xs:restriction base="xs:short">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="3"/>
   </xs:restriction>
</xs:simpleType>
<!--Definicion de tipo de dato 'typeMeses' usado en 'idade'-->
<xs:simpleType name="typeMeses">
   <xs:restriction base="xs:short">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="11"/>
   </xs:restriction>
</xs:simpleType>
<!-- Definicion del tipo numeroExpediente usado en atributo de 'neno' -->
<xs:simpleType name="typeExpediente">
    <xs:restriction base="xs:unsignedShort">
      <xs:pattern value="[0-9]{4}"/>
    </xs:restriction>
  </xs:simpleType>
<!-- Definicion del tipo typeCodigo usado en atributo de 'neno' -->
<xs:simpleType name="typeCodigo">
    <xs:restriction base="xs:string">
      <xs:pattern value="[PM][3-7]{2}(-[0-9]{3})?"/>
    </xs:restriction>
</xs:simpleType>
<!-- Definicion del tipo typeSexo para elemento 'sexo' -->
 <xs:simpleType name="typeSexo">
     <xs:restriction base="xs:string">
       <xs:pattern value="[HM]"/>
    </xs:restriction>
</xs:simpleType>

</xs:schema>